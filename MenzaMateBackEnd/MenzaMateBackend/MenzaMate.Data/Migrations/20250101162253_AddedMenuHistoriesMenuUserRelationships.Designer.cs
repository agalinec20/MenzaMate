// <auto-generated />
using System;
using MenzaMate.Data.Stores;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenzaMate.Data.Migrations
{
    [DbContext(typeof(MenzaMateContext))]
    [Migration("20250101162253_AddedMenuHistoriesMenuUserRelationships")]
    partial class AddedMenuHistoriesMenuUserRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MenzaMate.Data.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Answered")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Responses")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answered = new DateTime(2024, 1, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 1,
                            Responses = "Blue",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Answered = new DateTime(2024, 2, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            QuestionId = 3,
                            Responses = "Inception",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.FavoriteMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteMenus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Added = new DateTime(2024, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Added = new DateTime(2024, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.MenuHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Added")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserId");

                    b.ToTable("MenuHistories", (string)null);
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("SurveyId");

                    b.ToTable("Questions", (string)null);

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            QuestionText = "What is your favorite color?",
                            SurveyId = 1
                        },
                        new
                        {
                            QuestionId = 2,
                            QuestionText = "What is your favorite food?",
                            SurveyId = 1
                        },
                        new
                        {
                            QuestionId = 3,
                            QuestionText = "What is your favorite movie?",
                            SurveyId = 2
                        },
                        new
                        {
                            QuestionId = 4,
                            QuestionText = "What is your favorite book?",
                            SurveyId = 2
                        });
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("MenuRating")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings", (string)null);

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            Comment = "Delicious breakfast!",
                            MenuId = 1,
                            MenuRating = 0,
                            RatingDate = new DateTime(2024, 1, 16, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            RatingId = 2,
                            Comment = "Very satisfying lunch.",
                            MenuId = 2,
                            MenuRating = 0,
                            RatingDate = new DateTime(2024, 2, 16, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Survey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SurveyId"));

                    b.Property<DateTime>("SurveyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SurveyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SurveyId");

                    b.HasIndex("UserId");

                    b.ToTable("Surveys", (string)null);

                    b.HasData(
                        new
                        {
                            SurveyId = 1,
                            SurveyDate = new DateTime(2024, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SurveyDescription = "This is a description of the first survey.",
                            SurveyName = "First Survey",
                            UserId = 1
                        },
                        new
                        {
                            SurveyId = 2,
                            SurveyDate = new DateTime(2024, 2, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SurveyDescription = "This is a description of the second survey.",
                            SurveyName = "Second Survey",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("GoogleId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@example.com",
                            GoogleId = "google-id-12345",
                            Role = "Admin",
                            Username = "admin_user"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "student@example.com",
                            GoogleId = "google12",
                            Role = "Student",
                            Username = "student_user"
                        });
                });

            modelBuilder.Entity("MenzaMateBackend.Data.Entities.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("HistoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("MenuId");

                    b.ToTable("Menus", (string)null);

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            Date = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Eggs, toast, and coffee.",
                            HistoryId = 1,
                            Title = "Breakfast Menu"
                        },
                        new
                        {
                            MenuId = 2,
                            Date = new DateTime(2024, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chicken, rice, and salad.",
                            HistoryId = 2,
                            Title = "Lunch Menu"
                        });
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Answer", b =>
                {
                    b.HasOne("MenzaMate.Data.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenzaMate.Data.Entities.User", "User")
                        .WithMany("Answers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.FavoriteMenu", b =>
                {
                    b.HasOne("MenzaMateBackend.Data.Entities.Menu", "Menu")
                        .WithMany("FavoriteMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenzaMate.Data.Entities.User", "User")
                        .WithMany("FavoriteMenus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.MenuHistory", b =>
                {
                    b.HasOne("MenzaMateBackend.Data.Entities.Menu", "Menu")
                        .WithMany("MenuHistories")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenzaMate.Data.Entities.User", "User")
                        .WithMany("MenuHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Question", b =>
                {
                    b.HasOne("MenzaMate.Data.Entities.Survey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Rating", b =>
                {
                    b.HasOne("MenzaMateBackend.Data.Entities.Menu", "Menu")
                        .WithMany("Ratings")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenzaMate.Data.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Survey", b =>
                {
                    b.HasOne("MenzaMate.Data.Entities.User", "User")
                        .WithMany("Surveys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.Survey", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("MenzaMate.Data.Entities.User", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("FavoriteMenus");

                    b.Navigation("MenuHistories");

                    b.Navigation("Ratings");

                    b.Navigation("Surveys");
                });

            modelBuilder.Entity("MenzaMateBackend.Data.Entities.Menu", b =>
                {
                    b.Navigation("FavoriteMenus");

                    b.Navigation("MenuHistories");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
